# .github/workflows/ci-sonar-coverage.yml
name: Build, Test & SonarCloud Analyze

on:
  push:
    branches:
      - main

jobs:
  build-and-analyze:
    name: Build, Test & SonarCloud (EonWatchesAPI)
    runs-on: windows-latest            # <-- use Windows instead of ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install SonarCloud scanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin \
            /k:"ThomasvanOtterloo_Afstudeerstage_2TCI" \
            /o:"mysonarcloudtester" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.sources="EonWatchesAPI" \
            /d:sonar.cs.opencover.reportsPaths="MyApi.Tests/coverage/coverage.opencover.xml" \
            /d:sonar.scanner.scanAll=false

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build EonWatchesAPI.sln --configuration Release

      - name: Run tests and collect coverage
        run: |
          dotnet test EonWatchesAPI.sln \
            --configuration Release \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover \
            /p:CoverletOutput="$(pwd)/MyApi.Tests/coverage/coverage.opencover.xml"

      - name: Debug coverage output
        run: |
          echo "== Listing contents of MyApi.Tests/coverage =="
          ls -l MyApi.Tests/coverage
          echo "== First 20 lines of coverage.opencover.xml =="
          head -n 20 MyApi.Tests/coverage/coverage.opencover.xml || echo "File not found"

      - name: End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
